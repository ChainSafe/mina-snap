name: Release
on:
  push:
    branches:
      - main
jobs:
  deploy-gh:
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Install and Build 🔧 
        run: |
          yarn install --frozen-lockfile
          yarn build:demo
        env:
          REACT_APP_SNAP_ID: 'npm:@chainsafe/minasnap'

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4.3.0
        with:
          branch: gh-pages 
          folder: packages/demo-dapp/build
  maybe-release:
    name: release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:

        # you should probably do this after your regular CI checks passes
      - uses: google-github-actions/release-please-action@v3 # it will analyze commits and create PR with new version and updated CHANGELOG:md file. On merging it will create github release page with changelog
        id: release
        with:
          release-type: node
          package-name: mina-snap
          path: packages/snap
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Miscellaneous","hidden":false}]'
      
      - uses: actions/checkout@v3
        # these if statements ensure that a publication only occurs when
        # a new release is created:
        if: ${{ steps.release.outputs.releases_created }}
        
      - uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: 16
          registry-url: 'https://registry.npmjs.org'
        if: ${{ steps.release.outputs.releases_created }}
      
      - run: yarn install --frozen-lockfile
        if: ${{ steps.release.outputs.releases_created }}
      
      - run: yarn build
        if: ${{ steps.release.outputs.releases_created }}
      

      - run: |
          cd packages/snap
          yarn publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}} # use npm "Automation" token and put in Github repository secrets under "NPM_TOKEN"
        if: ${{ steps.release.outputs.releases_created }}
